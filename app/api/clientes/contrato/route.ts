import { NextRequest, NextResponse } from 'next/server'
import PDFDocument from 'pdfkit'
import fs from 'fs'
import path from 'path'

export async function POST(req: NextRequest) {
  try {
    console.log('üîÑ API de contrato llamada');
    const data = await req.json()
    console.log('üìã Datos recibidos:', data);
    
    // Datos del cliente
    const {
      nombres,
      apellidos,
      cedula,
      direccion,
      tipo_plan,
      precio_plan,
      sector,
      fecha_nacimiento,
      email,
      telefono,
      velocidad_descarga = '',
      velocidad_subida = '',
      tipo_conexion = '',
      ip = '',
      valor_instalacion = '',
      canton = '',
      ciudad = '',
      dia_firma = '',
      mes_firma = '',
      anio_firma = '',
    } = data

    // Datos de la empresa (puedes personalizar)
    const empresa = {
      nombre: 'TELTEC NET S.A.',
      ruc: '0999999999',
      direccion: 'Av. Principal y Calle Secundaria, Ciudad',
      representante: 'Juan P√©rez',
      ci_representante: '0102030405',
      cargo: 'Gerente General',
    }

    // Crear PDF
    const doc = new PDFDocument({ margin: 40 })
    const fontPath = path.join(process.cwd(), 'public', 'fonts', 'Roboto-Regular.ttf');
    doc.registerFont('roboto', fontPath);
    doc.font('roboto');
    const buffers: Buffer[] = []
    doc.on('data', buffers.push.bind(buffers))
    doc.on('end', () => {})

    // Insertar logo centrado si existe, si no, continuar sin error
    try {
      const logoPath = path.join(process.cwd(), 'public', 'images', 'ttnet-logo.png')
      if (fs.existsSync(logoPath)) {
        doc.image(logoPath, doc.page.width / 2 - 60, undefined, { width: 120, align: 'center' })
        doc.moveDown(1)
      } else {
        console.warn('Logo no encontrado en public/images/ttnet-logo.png. El contrato se generar√° sin logo.')
      }
    } catch (e) {
      console.warn('No se pudo insertar el logo en el contrato PDF:', e)
    }

    doc.font('roboto').fontSize(14).text('CONTRATO DE PRESTACI√ìN DE SERVICIO DE INTERNET.', { align: 'center', underline: true })
    doc.moveDown(0.5)
    doc.font('roboto').fontSize(12).text('ENTRE LA EMPRESA TELTEC NET Y EL CLIENTE', { align: 'center' })
    doc.moveDown(1)

    doc.font('roboto').fontSize(11).text(
      `Comparecen a la celebraci√≥n del presente contrato: por una parte, la empresa ${empresa.nombre}, legalmente constituida conforme a las leyes ecuatorianas, con RUC No. ${empresa.ruc}, domiciliada en ${empresa.direccion}, representada por su Gerente General ${empresa.representante}, a quien en adelante se le denominar√° LA EMPRESA; y por otra parte, el/la se√±or(a) ${nombres} ${apellidos}, portador(a) de la c√©dula de identidad No. ${cedula}, domiciliado(a) en ${direccion}, a quien en adelante se le denominar√° EL CLIENTE.\n\nAmbas partes, libres y voluntariamente, acuerdan celebrar el presente contrato de Prestaci√≥n de Servicio de Internet al tenor de las siguientes cl√°usulas:`
    )
    doc.moveDown(1)

    // T√≠tulos de cl√°usulas en negrita simulada (may√∫sculas)
    doc.font('roboto').fontSize(11).text('CL√ÅUSULA PRIMERA: OBJETO DEL CONTRATO')
    doc.font('roboto').fontSize(11).text('LA EMPRESA se compromete a prestar a EL CLIENTE el servicio de acceso a Internet, bajo las condiciones t√©cnicas, econ√≥micas y legales establecidas en este contrato y en los anexos correspondientes.')
    doc.moveDown(0.5)

    doc.font('roboto').fontSize(11).text('CL√ÅUSULA SEGUNDA: PLAZO')
    doc.font('roboto').fontSize(11).text('El presente contrato tendr√° una duraci√≥n de un (1) a√±o, contado a partir de la fecha de firma del mismo, y podr√° ser renovado por acuerdo de ambas partes mediante anexo escrito.')
    doc.moveDown(0.5)

    doc.font('roboto').fontSize(11).text('CL√ÅUSULA TERCERA: CARACTER√çSTICAS DEL SERVICIO')
    doc.font('roboto').fontSize(11).text(`\n¬ß  Velocidad de descarga: ${velocidad_descarga || '[___]'} Mbps\n¬ß  Velocidad de subida: ${velocidad_subida || '[___]'} Mbps\n¬ß  Tipo de conexi√≥n: ${tipo_conexion || '[Fibra √≥ptica / Inal√°mbrica / Otro]'}\n¬ß  IP: ${ip || '[Din√°mica / Est√°tica]'}\n¬ß  Soporte t√©cnico: 24/7\n¬ß  Instalaci√≥n: gratuita / valor de $${valor_instalacion || '[___]'}`)
    doc.moveDown(0.5)

    doc.font('roboto').fontSize(11).text('CL√ÅUSULA CUARTA: VALOR Y FORMA DE PAGO')
    doc.font('roboto').fontSize(11).text(`EL CLIENTE se obliga a pagar a LA EMPRESA la suma mensual de $${precio_plan || '_____'} (D√≥lares de los Estados Unidos de Am√©rica), que deber√° ser cancelada hasta el 5 de cada mes mediante dep√≥sito, transferencia o pago en l√≠nea. El retraso en el pago generar√° una mora del 2% mensual sobre el saldo adeudado.`)
    doc.moveDown(0.5)

    doc.font('roboto').fontSize(11).text('CL√ÅUSULA QUINTA: OBLIGACIONES DE LAS PARTES')
    doc.font('roboto').fontSize(11).text(`\nEMPRESA:\n¬ß  Garantizar la prestaci√≥n continua del servicio con una disponibilidad m√≠nima del 98%.\n¬ß  Brindar soporte t√©cnico oportuno ante fallas o interrupciones.\n¬ß  Informar con al menos 24 horas de anticipaci√≥n sobre mantenimientos programados.\n\nCLIENTE:\n¬ß  Usar el servicio conforme a la ley y sin afectar redes de terceros.\n¬ß  Permitir el acceso t√©cnico a su domicilio si se requiere para instalaci√≥n o mantenimiento.\n¬ß  Cumplir con la fecha de pago mensual estipulada.\n¬ß  En caso de acumular una deuda superior a dos (2) meses consecutivos, LA EMPRESA retirar√° los equipos instalados en el domicilio del CLIENTE sin necesidad de resoluci√≥n judicial, debiendo EL CLIENTE permitir el acceso para dicho retiro.\n¬ß  Si los equipos instalados se queman, da√±an o dejan de funcionar debido a causas imputables al entorno o manejo del CLIENTE (como subidas de tensi√≥n, cortocircuitos, mala manipulaci√≥n, etc.), EL CLIENTE deber√° cancelar √∫nicamente el valor del equipo a reponer, exoner√°ndose del pago por nueva instalaci√≥n.\n¬ß  Pagar puntualmente las facturas generadas por el servicio contratado.`)
    doc.moveDown(0.5)

    doc.font('roboto').fontSize(11).text('CL√ÅUSULA SEXTA: SUSPENSI√ìN Y TERMINACI√ìN')
    doc.font('roboto').fontSize(11).text(`LA EMPRESA podr√° suspender el servicio en caso de:\n¬ß  Falta de pago por m√°s de 15 d√≠as.\n¬ß  Uso indebido de la red.\n¬ß  Incumplimiento contractual por parte de EL CLIENTE.\n\nEl contrato podr√° darse por terminado de mutuo acuerdo o por incumplimiento grave de alguna de las partes.`)
    doc.moveDown(0.5)

    doc.font('roboto').fontSize(11).text('CL√ÅUSULA S√âPTIMA: RESPONSABILIDAD')
    doc.font('roboto').fontSize(11).text('LA EMPRESA no ser√° responsable por interrupciones ocasionadas por fuerza mayor, fallos el√©ctricos o causas externas ajenas a su control.')
    doc.moveDown(0.5)

    doc.font('roboto').fontSize(11).text('CL√ÅUSULA OCTAVA: JURISDICCI√ìN Y COMPETENCIA')
    doc.font('roboto').fontSize(11).text(`Para cualquier controversia derivada del presente contrato, las partes se someten a la jurisdicci√≥n de los jueces del cant√≥n ${canton || '______________'}, renunciando expresamente a cualquier otro fuero que pudiera corresponderles.`)
    doc.moveDown(0.5)

    doc.font('roboto').fontSize(11).text('CL√ÅUSULA NOVENA: ACEPTACI√ìN')
    doc.font('roboto').fontSize(11).text(`Le√≠do que fue el presente contrato, y encontr√°ndolo conforme, lo firman por duplicado en ${ciudad || '______'}, a los ${dia_firma || '______'} d√≠as del mes de ${mes_firma || '______'} del a√±o ${anio_firma || '_________'}.`)
    doc.moveDown(1)

    // Firmas
    doc.font('roboto').fontSize(11).text('POR LA EMPRESA TELTEC NET', { continued: false })
    doc.font('roboto').fontSize(11).text(`Nombre: ${empresa.representante}`)
    doc.font('roboto').fontSize(11).text(`C.I.: ${empresa.ci_representante}`)
    doc.font('roboto').fontSize(11).text(`Cargo: ${empresa.cargo}`)
    doc.font('roboto').fontSize(11).text('Firma: ________________________')
    doc.moveDown(1)
    doc.font('roboto').fontSize(11).text('POR EL CLIENTE', { continued: false })
    doc.font('roboto').fontSize(11).text(`Nombre: ${nombres} ${apellidos}`)
    doc.font('roboto').fontSize(11).text(`C.I.: ${cedula}`)
    doc.font('roboto').fontSize(11).text(`Direcci√≥n: ${direccion}`)
    doc.font('roboto').fontSize(11).text('Firma: ________________________')
    doc.end()

    const pdfBuffer = await new Promise<Buffer>((resolve) => {
      doc.on('end', () => {
        console.log('‚úÖ PDF generado exitosamente');
        resolve(Buffer.concat(buffers))
      })
    })

    console.log('üìÑ Tama√±o del PDF:', pdfBuffer.length, 'bytes');
    console.log('üìÅ Nombre del archivo:', `Contrato_${nombres}_${apellidos}.pdf`);

    return new NextResponse(pdfBuffer, {
      status: 200,
      headers: {
        'Content-Type': 'application/pdf',
        'Content-Disposition': `attachment; filename=Contrato_${nombres}_${apellidos}.pdf`,
      },
    })
  } catch (e) {
    console.error('‚ùå Error generando contrato PDF:', e)
    console.error('üìÑ Stack trace:', (e as Error).stack)
    return new NextResponse(
      JSON.stringify({ success: false, message: 'Error generando contrato PDF', error: String(e) }),
      { status: 500, headers: { 'Content-Type': 'application/json' } }
    )
  }
} 